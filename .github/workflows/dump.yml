on:
  push:
  schedule:
  - cron: 0 22 */7 * *
jobs:
  dump:
    if: github.event_name != 'schedule' || vars.ENABLE_SCHEDULE == 'true'
    strategy:
      matrix:
        runner:
        - ubuntu-20.04
        - ubuntu-22.04
      fail-fast: false
    runs-on: ${{ matrix.runner }}
    permissions: write-all
    env:
      SUFFIX: -${{ github.run_id }}.${{ github.run_attempt }}
      UP: |-
        | tee >(sha256sum | awk '{ print $1 }' > sha.txt) | gzip -9 -c | tee >(sha256sum | awk '{ print $1 }' > sha2.txt) | node script.js
    steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Create Script
      run: |
        var fs = require("fs");
        var token = setInterval(() => {
            console.log("Bytes read: " + process.stdin.bytesRead);
        }, 5000);
        (async () => {
            try {
                var token = "";
                var refresh = async () => {
                  var resp = await fetch("https://ghcr.io/token?service=registry.docker.io&scope=repository:${{ github.repository_owner }}/runner-images:pull,push",  { method: "GET", redirect: "manual", credentials: "include", headers: {
                      "Authorization": "Basic " + btoa("${{ github.actor }}:${{ github.token }}")
                  } });
                  console.log(JSON.stringify(resp.status));
                  token = (await resp.json()).token;
                }
                if(process.env.UPLOAD_LAYER) {
                  await refresh();
                  var resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/blobs/uploads/", { method: "POST", redirect: "manual", body: "", credentials: "include", headers: {
                      "Authorization": "Bearer " + token
                  } });
                  console.log(JSON.stringify(resp.status));
                  var location = resp.headers.get("Location");
                  console.log("NEXT_URL:" + location);
                  resp = await fetch("https://ghcr.io" + location, { method: "PATCH", redirect: "manual", body: process.stdin, duplex: "half", credentials: "include", headers: {
                      "Content-Type": "application/octet-stream",
                      "Authorization": "Bearer " + token
                  } });
                  console.log(JSON.stringify(resp.status));
                  location = resp.headers.get("Location");
                  console.log("NEXT_URL:" + location);
                  await refresh();
                  var url = "https://ghcr.io" + location + "?digest=sha256:" + (await fs.promises.readFile("sha2.txt", { encoding: "utf-8" })).trim();
                  console.log("url:" + url);
                  resp = await fetch(url, { method: "PUT", redirect: "manual", duplex: "half", credentials: "include", headers: {
                      "Content-Type": "application/octet-stream",
                      "Content-Length": "0",
                      "Authorization": "Bearer " + token
                  } });
                  console.log(JSON.stringify(resp.status));
                  location = resp.headers.get("Location");
                  console.log("NEXT_URL:" + location);
                }
                clearInterval(token);

                var environment = await fs.promises.readFile("/etc/environment", { encoding: "utf-8" });
                var envMap = {};
                var envList = [];
                var trimQuotes = str => {
                  if(str.startsWith("\"") && str.endsWith("\"")) {
                    return str.substring(1, str.length - 1);
                  }
                  return str;
                };
                for(var line of environment.split("\n")) {
                  if(line.length > 0) {
                    var i = line.indexOf("=");
                    var key = line.substring(0, i);
                    var val = trimQuotes(line.substring(i + 1));
                    envList.push(key + "=" + val);
                    envMap[key] = val;
                  }
                }

                var friendlyTag = envMap["ImageOS"] && envMap["ImageVersion"] ? envMap["ImageOS"] + "-" + process.env.TAG + "-" + envMap["ImageVersion"] : null;
                var latestTag = envMap["ImageOS"] && envMap["ImageVersion"] ? envMap["ImageOS"] + "-" + process.env.TAG + "-latest" : null;

                var config = {
                  "architecture": "amd64",
                  "os": "linux",
                  "config": {
                    "Env": envList,
                    "Entrypoint": null,
                    "Cmd": [ "bash" ],
                    "User": process.getuid() + ":" + process.getgid(),
                    "Labels": {
                      "org.opencontainers.image.authors": ${{ toJson(format('{0}/{1}', github.server_url, github.repository_owner)) }},
                      "org.opencontainers.image.created": new Date().toISOString(),
                      "org.opencontainers.image.description": "Dump of the runner image",
                      "org.opencontainers.image.documentation": ${{ toJson(format('{0}/{1}/tree/{2}', github.server_url, github.repository, github.sha)) }},
                      "org.opencontainers.image.ref.name": ("ghcr.io/" + ${{ toJson(github.repository_owner) }} + "/runner-images").toLowerCase(),
                      "org.opencontainers.image.revision": ${{ toJson(github.sha) }},
                      "org.opencontainers.image.source": ${{ toJson(format('{0}/{1}/tree/{2}', github.server_url, github.repository, github.sha)) }},
                      "org.opencontainers.image.title": "runner-image-amd64",
                      "org.opencontainers.image.url": ${{ toJson(format('{0}/{1}/tree/{2}', github.server_url, github.repository, github.sha)) }},
                      "org.opencontainers.image.vendor": ${{ toJson(github.repository_owner) }},
                      "org.opencontainers.image.version": friendlyTag
                    },
                  },
                  "rootfs": {
                    "type": "layers",
                    "diff_ids": []
                  }
                };

                if(process.env.DIFF_IDS) {
                  var diff_ids = JSON.parse(process.env.DIFF_IDS);
                  config.rootfs.diff_ids = diff_ids.concat(config.rootfs.diff_ids);
                }
                if(process.env.UPLOAD_LAYER) {
                  var diff_id = "sha256:" + (await fs.promises.readFile("sha.txt", { encoding: "utf-8" })).trim();
                  config.rootfs.diff_ids.push(diff_id);
                  await fs.promises.appendFile(process.env.GITHUB_OUTPUT, "diff_id=" + JSON.stringify(diff_id) + "\n", { encoding: "utf-8" });
                }

                var strconfig = JSON.stringify(config);
                console.log(strconfig);
                var crypto = require('crypto');
                var hash = crypto.createHash('sha256').update(strconfig).digest('hex');
                await refresh();
                var resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/blobs/uploads/", { method: "POST", redirect: "manual", body: "", credentials: "include", headers: {
                    "Authorization": "Bearer " + token
                } });
                console.log(JSON.stringify(resp.status));
                var location = resp.headers.get("Location");
                console.log("NEXT_URL:" + location);
                resp = await fetch("https://ghcr.io" + location, { method: "PATCH", redirect: "manual", body: strconfig, duplex: "half", credentials: "include", headers: {
                    "Content-Type": "application/octet-stream",
                    "Authorization": "Bearer " + token
                } });
                console.log(JSON.stringify(resp.status));
                location = resp.headers.get("Location");
                console.log("NEXT_URL:" + location);
                await refresh();
                url = "https://ghcr.io" + location + "?digest=sha256:" + hash;
                console.log("url:" + url);
                resp = await fetch(url, { method: "PUT", redirect: "manual", duplex: "half", credentials: "include", headers: {
                    "Content-Type": "application/octet-stream",
                    "Content-Length": "0",
                    "Authorization": "Bearer " + token
                } });
                console.log(JSON.stringify(resp.status));
                location = resp.headers.get("Location");
                console.log("NEXT_URL:" + location);

                var manifest = {
                  "schemaVersion": 2,
                  "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                  "config": {
                    "mediaType": "application/vnd.docker.container.image.v1+json",
                    "size": strconfig.length,
                    "digest": "sha256:" + hash
                  },
                  "layers": []
                };
                if(process.env.LAYERS) {
                  var layers = JSON.parse(process.env.LAYERS);
                  manifest.layers = layers.concat(manifest.layers);
                }
                if(process.env.UPLOAD_LAYER) {
                  var layer = {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": process.stdin.bytesRead,
                    "digest": "sha256:" + (await fs.promises.readFile("sha2.txt", { encoding: "utf-8" })).trim()
                  };
                  manifest.layers.push(layer);
                  await fs.promises.appendFile(process.env.GITHUB_OUTPUT, "layer=" + JSON.stringify(layer) + "\n", { encoding: "utf-8" })
                }
                var strmanifest = JSON.stringify(manifest);
                console.log(strmanifest);
                
                await refresh();
                var tag = process.env.TAG + (process.env.SUFFIX || '');
                if(envMap["ImageOS"]) {
                  tag = envMap["ImageOS"] + "-" + tag;
                }
                resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/manifests/" + tag, { method: "PUT", redirect: "manual", body: strmanifest, duplex: "half", credentials: "include", headers: {
                    "Content-Type": "application/vnd.docker.distribution.manifest.v2+json",
                    "Authorization": "Bearer " + token
                } });
                console.log(JSON.stringify(resp.status));

                if(friendlyTag) {
                  await refresh();
                  resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/manifests/" + friendlyTag, { method: "GET", redirect: "manual", credentials: "include", headers: {
                      "Accept": "application/vnd.docker.distribution.manifest.v2+json",
                      "Authorization": "Bearer " + token
                  } });

                  if(resp.status < 200 || resp.status > 299) {
                  
                      resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/manifests/" + friendlyTag, { method: "PUT", redirect: "manual", body: strmanifest, duplex: "half", credentials: "include", headers: {
                          "Content-Type": "application/vnd.docker.distribution.manifest.v2+json",
                          "Authorization": "Bearer " + token
                      } });
                      console.log(JSON.stringify(resp.status));

                      console.log("Move latest tag forward");
                      resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/manifests/" + latestTag, { method: "PUT", redirect: "manual", body: strmanifest, duplex: "half", credentials: "include", headers: {
                          "Content-Type": "application/vnd.docker.distribution.manifest.v2+json",
                          "Authorization": "Bearer " + token
                      } });
                      console.log(JSON.stringify(resp.status));
                  }
                }
                
                process.exitCode = 0;
            } catch(ex) {
                console.log(ex);
                process.exitCode = 1;
            } finally {
                clearInterval(token);
            }
            process.exit();
        })()
      shell: mv {0} script.js
    - name: Dump Base Image
      id: baseImage
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c "--exclude=$GITHUB_WORKSPACE" "--exclude=/proc/*" "--exclude=/dev/*" "--exclude=/run/*" "--exclude=/sys/*" "--exclude=/tmp/*" "--exclude=/opt/*" "--exclude=/var/cache/*" "--exclude=/var/snap" "--exclude=/var/run/*" "--exclude=/var/tmp/*" "--exclude=/var/crash/*" "--exclude=/var/lib/docker/*" "--exclude=/var/lib/apt/lists/*" "--exclude=/usr/local/*/*"  "--exclude=/mnt/*" "--exclude=/snap/*" "--exclude=/boot" "--exclude=/data" "--exclude=/boot" "--exclude=/imagegeneration/installers/*.tar.*" "--exclude=/home/runner/runners" "--exclude=/home/runner/work" "--exclude=/usr/share/dotnet" "--exclude=/etc/skel" "--exclude=/home/runner/.rustup" "--exclude=/home/runner/.cargo" "--exclude=/home/runner/.dotnet" "--exclude=/home/runneradmin" "--exclude=/usr/share/swift" "--exclude=/usr/share/miniconda" "--exclude=/usr/lib/google-cloud-sdk" "--exclude=/usr/lib/jvm" "--exclude=/usr/lib/mono" "--exclude=/usr/lib/gcc" "--exclude=/usr/lib/llvm-*" "--exclude=/usr/lib/firefox" "--exclude=/usr/lib/python3" / ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-base
      shell: bash
    - name: Dump /usr/local
      id: usr-local
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c "--exclude=/usr/local/lib/android" "--exclude=/usr/local/.ghcup" "--exclude=/usr/local/share/powershell" --no-recursion /usr --recursion /usr/local ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-usr-local
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /opt
      id: opt
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c "--exclude=/opt/hostedtoolcache" /opt ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-opt
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /opt/hostedtoolcache
      id: hostedtoolcache
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /opt --recursion /opt/hostedtoolcache ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-hostedtoolcache
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump rust
      id: rust
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /home /home/runner --recursion /home/runner/.rustup /home/runner/.cargo ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-rust
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/share/dotnet
      id: dotnet
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /home /home/runner /usr /usr/share --recursion /usr/share/dotnet /home/runner/.dotnet ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-dotnet
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/share/swift
      id: swift
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /usr /usr/share --recursion /usr/share/swift ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-swift
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/share/miniconda
      id: miniconda
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /usr /usr/share --recursion /usr/share/miniconda ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-miniconda
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/lib/google-cloud-sdk
      id: google-cloud-sdk
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/google-cloud-sdk ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-google-cloud-sdk
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/lib/jvm
      id: jvm
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/jvm ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-jvm
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump /usr/lib/mono
      id: mono
      run: |
        ${{ env.CMD }} || ${{ env.CMD }}
      env:
        CMD: sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/mono ${{ env.UP }}
        UPLOAD_LAYER: 1
        TAG: runner-mono
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump gcc
      id: gcc
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/gcc ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-gcc
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump llvm
      id: llvm
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/llvm-* ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-llvm
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.gcc.outputs.layer }}
          ]
      shell: bash
    - name: Dump firefox
      id: firefox
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/firefox ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-firefox
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump python3
      id: python3
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/lib --recursion /usr/lib/python3 ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-python3
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Dump android
      id: android
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/local /usr/local/lib --recursion /usr/local/lib/android ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-usr-android
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }}
          ]
      shell: bash
    - name: Dump haskell
      id: haskell
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/local /usr/local --recursion /usr/local/.ghcup ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-usr-haskell
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }}
          ]
      shell: bash
    - name: Dump powershell
      id: powershell
      run: |
        sudo tar -C / -c --no-recursion /usr /usr/local /usr/local/share --recursion /usr/local/share/powershell ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-usr-powershell
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }}
          ]
      shell: bash
    - name: Dump /snap
      id: snap
      run: |
        sudo tar -C / -c /snap ${{ env.UP }}
      env:
        UPLOAD_LAYER: 1
        TAG: runner-snap
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-usr-local-opt
      run: |
        node script.js
      env:
        TAG: runner-usr-local-opt
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-usr-local-opt-snap
      run: |
        node script.js
      env:
        TAG: runner-usr-local-opt-snap
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.snap.outputs.diff_id }},
            ${{ steps.dotnet.outputs.diff_id }},
            ${{ steps.swift.outputs.diff_id }},
            ${{ steps.miniconda.outputs.diff_id }},
            ${{ steps.google-cloud-sdk.outputs.diff_id }},
            ${{ steps.jvm.outputs.diff_id }},
            ${{ steps.mono.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.firefox.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.android.outputs.diff_id }},
            ${{ steps.haskell.outputs.diff_id }},
            ${{ steps.powershell.outputs.diff_id }},
            ${{ steps.hostedtoolcache.outputs.diff_id }},
            ${{ steps.rust.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.snap.outputs.layer }},
            ${{ steps.dotnet.outputs.layer }},
            ${{ steps.swift.outputs.layer }},
            ${{ steps.miniconda.outputs.layer }},
            ${{ steps.google-cloud-sdk.outputs.layer }},
            ${{ steps.jvm.outputs.layer }},
            ${{ steps.mono.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.firefox.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.android.outputs.layer }},
            ${{ steps.haskell.outputs.layer }},
            ${{ steps.powershell.outputs.layer }},
            ${{ steps.hostedtoolcache.outputs.layer }},
            ${{ steps.rust.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-large
      run: |
        node script.js
      env:
        TAG: runner-large
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.dotnet.outputs.diff_id }},
            ${{ steps.swift.outputs.diff_id }},
            ${{ steps.miniconda.outputs.diff_id }},
            ${{ steps.google-cloud-sdk.outputs.diff_id }},
            ${{ steps.jvm.outputs.diff_id }},
            ${{ steps.mono.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.firefox.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.android.outputs.diff_id }},
            ${{ steps.haskell.outputs.diff_id }},
            ${{ steps.powershell.outputs.diff_id }},
            ${{ steps.hostedtoolcache.outputs.diff_id }},
            ${{ steps.rust.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.dotnet.outputs.layer }},
            ${{ steps.swift.outputs.layer }},
            ${{ steps.miniconda.outputs.layer }},
            ${{ steps.google-cloud-sdk.outputs.layer }},
            ${{ steps.jvm.outputs.layer }},
            ${{ steps.mono.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.firefox.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.android.outputs.layer }},
            ${{ steps.haskell.outputs.layer }},
            ${{ steps.powershell.outputs.layer }},
            ${{ steps.hostedtoolcache.outputs.layer }},
            ${{ steps.rust.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium
      run: |
        node script.js
      env:
        TAG: runner-medium
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-powershell
      run: |
        node script.js
      env:
        TAG: runner-medium-powershell
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.powershell.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.powershell.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-haskell
      run: |
        node script.js
      env:
        TAG: runner-medium-haskell
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.dotnet.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.haskell.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-dotnet
      run: |
        node script.js
      env:
        TAG: runner-medium-dotnet
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.dotnet.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.dotnet.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-rust
      run: |
        node script.js
      env:
        TAG: runner-medium-rust
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.rust.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.rust.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-swift
      run: |
        node script.js
      env:
        TAG: runner-medium-swift
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.swift.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.swift.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-firefox
      run: |
        node script.js
      env:
        TAG: runner-medium-firefox
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.firefox.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.firefox.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-google-cloud-sdk
      run: |
        node script.js
      env:
        TAG: runner-medium-google-cloud-sdk
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.google-cloud-sdk.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.google-cloud-sdk.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-miniconda
      run: |
        node script.js
      env:
        TAG: runner-medium-miniconda
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.miniconda.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.miniconda.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-hostedtoolcache
      run: |
        node script.js
      env:
        TAG: runner-medium-hostedtoolcache
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.hostedtoolcache.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.hostedtoolcache.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-mono
      run: |
        node script.js
      env:
        TAG: runner-medium-mono
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.mono.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.mono.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-android
      run: |
        node script.js
      env:
        TAG: runner-medium-android
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.android.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.android.outputs.layer }}
          ]
      shell: bash
    - name: Upload runner-medium-jvm
      run: |
        node script.js
      env:
        TAG: runner-medium-jvm
        DIFF_IDS: |
          [
            ${{ steps.baseImage.outputs.diff_id }},
            ${{ steps.usr-local.outputs.diff_id }},
            ${{ steps.opt.outputs.diff_id }},
            ${{ steps.gcc.outputs.diff_id }},
            ${{ steps.llvm.outputs.diff_id }},
            ${{ steps.python3.outputs.diff_id }},
            ${{ steps.jvm.outputs.diff_id }}
          ]
        LAYERS: |
          [
            ${{ steps.baseImage.outputs.layer }},
            ${{ steps.usr-local.outputs.layer }},
            ${{ steps.opt.outputs.layer }},
            ${{ steps.gcc.outputs.layer }},
            ${{ steps.llvm.outputs.layer }},
            ${{ steps.python3.outputs.layer }},
            ${{ steps.jvm.outputs.layer }}
          ]
      shell: bash
