on: push
jobs:
  dump:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Preinstall
      run: |
        npm install docker-tar-pusher
    - name: Create Script
      run: |
        import {DockerTarPusher} from 'docker-tar-pusher';
        import path from 'path';
        var myLogger = {
          error: (msg) => {
            console.log(`[ERROR] ${msg}`);
          },
          warn: (msg) => {
            console.log(`[WARN] ${msg}`);
          },
          info: (msg) => {
            console.log(`[INFO] ${msg}`);
          },
          debug: (msg) => {
            console.log(`[DEBUG] ${msg}`);
          }
        };
        
        var options = {
          registryUrl: 'ghcr.io/${{ github.repository_owner }}/runner-images:ubuntu-latest'.toLowerCase(),
          tarball: path.relative(process.cwd(), "/dev/stdin"),
          chunkSize: 8 * 1024 * 1024,
          applicationLogger: myLogger,
          sslVerify: false,
          auth: {
            username: '${{ github.actor }}'.toLowerCase(),
            password: '${{ github.token }}'
          }
        };
        const dockerTarPusher = new DockerTarPusher(options);
        
        // Attaching clean-up logic to shutdown hook
        process.on('SIGINT', () => {
          dockerTarPusher.cleanUp();
        });
        
        (async () => {
          await dockerTarPusher.pushToRegistry();
        })();
      shell: mv {0} myscript.mjs
    - name: Dump Image
      run: |
        sudo tar -C / -c "--exclude=$GITHUB_WORKSPACE" "--exclude=/proc" "--exclude=/dev" "--exclude=/run" "--exclude=/var" . | node myscript.mjs
      shell: bash
