on: push
jobs:
  dump:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Auth for push
      id: auth
      run: |
        echo "resp<<EOF" >> "$GITHUB_OUTPUT"
        curl "https://ghcr.io/token?service=registry.docker.io&scope=repository:${{ github.repository_owner }}/runner-images:pull,push" \
        -u "${{ github.actor }}:${{ github.token }}" >> "$GITHUB_OUTPUT"
        echo "" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        cat "$GITHUB_OUTPUT"
      shell: bash
    - name: Create Script
      run: |
        var fs = require("fs");
        var token = setTimeout(() => {
            console.log("Bytes read: " + process.stdin.bytesRead);
        }, 5000);
        (async () => {
            try {
                var resp = await fetch("https://ghcr.io/v2/${{ github.repository_owner }}/runner-images/blobs/uploads/", { method: "POST", redirect: "manual", body: "", credentials: "include", headers: {
                    "Authorization": "Bearer ${{ fromjson(steps.auth.outputs.resp).token }}"
                } });
                console.log(JSON.stringify(resp.status));
                var location = resp.headers.get("Location");
                console.log("NEXT_URL:" + location);
                resp = await fetch("https://ghcr.io" + location, { method: "PATCH", redirect: "manual", body: process.stdin, duplex: "half", credentials: "include", headers: {
                    "Content-Type": "application/octet-stream",
                    "Authorization": "Bearer ${{ fromjson(steps.auth.outputs.resp).token }}"
                } });
                location = resp.headers.get("Location");
                console.log("NEXT_URL:" + location);
                await fs.promises.writeFile(process.env.GITHUB_OUTPUT, "NEXT_URL=https://ghcr.io" + location, { encoding: "utf-8" });
                process.exitCode = 0;
            } catch(ex) {
                console.log(ex);
                process.exitCode = 1;
            } finally {
                clearTimeout(token);
            }
            process.exit();
        })()
      shell: mv {0} script.js
    - name: Dump Image
      id: dump_image
      run: |
        touch sha.txt
        touch sha2.txt
        sudo tar -C / -c "--exclude=$GITHUB_WORKSPACE" "--exclude=/proc" "--exclude=/dev" "--exclude=/run" "--exclude=/var" usr/bin/clang | tee >(sha256sum | awk '{ print $1 }' > sha.txt) | gzip -9 -c | tee >(sha256sum | awk '{ print $1 }' > sha2.txt) | node script.js
        echo "Sha is"
        cat sha.txt
        echo "Sha2 is"
        cat sha2.txt
      shell: bash
    - name: Auth 2
      id: auth2
      run: |
        echo "resp<<EOF" >> "$GITHUB_OUTPUT"
        curl "https://ghcr.io/token?service=registry.docker.io&scope=repository:${{ github.repository_owner }}/runner-images:pull,push" \
        -u "${{ github.actor }}:${{ github.token }}" >> "$GITHUB_OUTPUT"
        echo "" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        cat "$GITHUB_OUTPUT"
      shell: bash
    - name: Commit Image
      run: |
        curl -v -X PATCH "${{ steps.dump_image.outputs.NEXT_URL }}&digest=sha256:$(cat sha2.txt)" -H "Authorization: Bearer ${{ fromjson(steps.auth2.outputs.resp).token }}"
      shell: bash
